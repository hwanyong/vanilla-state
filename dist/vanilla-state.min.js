!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).VanillaState=t()}(this,(function(){"use strict";let e=0;return class{constructor(t,i){return this._state={},this._listeners={},this._isPrimitive=!1,this._instanceId=++e,this._debug=i?.debug||!1,this._namespace=i?.namespace||`vnl_${this._instanceId}`,this._debug&&console.log(`[VnlState] Created instance with namespace: ${this._namespace}`),null!=t&&("object"!=typeof t||t instanceof Date)?(this._value=t,this._isPrimitive=!0):"object"==typeof t&&null!==t&&Object.keys(t).forEach((e=>{this._state[e]=t[e]})),new Proxy(this,{get:(e,t)=>"valueOf"===t?function(){return e._isPrimitive?e._value:e}:"toString"===t?function(){return e._isPrimitive?String(e._value):"[object VnlState]"}:t in e?e[t]:e._isPrimitive&&"value"===t?e._value:e._state[t],set:(e,t,i)=>{if(e._isPrimitive&&"value"===t){const t=e._value;return e._value=i,t!==i&&e.dispatchEvent("change",i),!0}if(e._isPrimitive&&""===t){const t=e._value;return e._value=i,t!==i&&e.dispatchEvent("change",i),!0}return t in e&&"function"!=typeof e[t]?e[t]=i:e._setState(t,i,!0),!0}})}_getNamespacedEventName(e){return this._namespace?`${this._namespace}:${e}`:e}addEventListener(e,t){const i=this._getNamespacedEventName(e);this._listeners[i]||(this._listeners[i]=new Set),this._listeners[i].add(t),this._debug&&console.log(`[VnlState:${this._namespace}] Added listener for event: ${e} (namespace: ${i})`)}removeEventListener(e,t){const i=this._getNamespacedEventName(e);this._listeners[i]&&(this._listeners[i].delete(t),0===this._listeners[i].size&&(delete this._listeners[i],this._debug&&console.log(`[VnlState:${this._namespace}] Removed listener for event: ${e}`)))}dispatchEvent(e,t,i){const s=this._getNamespacedEventName(e);if(!this._listeners[s])return!0;const n=new CustomEvent(s,{bubbles:i?.bubbles||!1,cancelable:i?.cancelable||!1,composed:i?.composed||!1,detail:t});let a=!1;return this._debug&&console.log(`[VnlState:${this._namespace}] Dispatching event: ${e} with value:`,t),this._listeners[s].forEach((e=>{try{e(t,n),n.cancelable&&n.defaultPrevented&&(a=!0)}catch(e){console.error(`Error in event listener for ${s}:`,e)}})),!a}_notify(e){const t=this._state[e];this.dispatchEvent(e,t),this._isPrimitive?this.dispatchEvent("change",this._value):this.dispatchEvent("change",{property:e,value:t})}setNamespace(e){this._debug&&console.log(`[VnlState] Changing namespace from "${this._namespace}" to "${e}"`),this._namespace=e}getNamespace(){return this._namespace}getInstanceId(){return this._instanceId}setDebug(e){this._debug=e}_setState(e,t,i=!0){if(this._isPrimitive){const e=this._value;return this._value=t,void(i&&e!==t&&this.dispatchEvent("change",t))}const s=this._state[e];this._state[e]=t,i&&s!==t&&this._notify(e)}set(e,t,i){if(this._isPrimitive){const i=e;let s=!0;if(arguments.length>2){const e="Invalid parameters for primitive state. Use set(value) or set(value, { notify: false })";throw this._debug&&console.error(e),new Error(e)}if(2===arguments.length){if(!t||"object"!=typeof t||!("notify"in t)){const e="Second parameter for primitive state must be options object with notify property";throw this._debug&&console.error(e,t),new Error(e)}s=!1!==t.notify}const n=this._value;return this._value=i,void(s&&n!==i&&this.dispatchEvent("change",i))}if(!this._isPrimitive){if("string"!=typeof e){const t="For object state, property name (string) is required as first parameter";throw this._debug&&console.error(t,e),new Error(t)}if(arguments.length<2){const e="For object state, value is required as second parameter";throw this._debug&&console.error(e),new Error(e)}if(arguments.length>2&&(null===i||"object"!=typeof i)){const e="Third parameter should be options object. Using default notify:true";this._debug&&console.warn(e,i)}const s=e,n=t,a=!1!==i?.notify;this._setState(s,n,a)}}get(){return this._isPrimitive?this._value:{...this._state}}batch(e){if(this._isPrimitive)return void console.warn("batch() method cannot be used with primitive VnlState instances");const t={...this._state};e(new Proxy(this,{set:(e,t,i)=>(t in e&&"function"!=typeof e[t]?e[t]=i:e.set(t,i,{notify:!1}),!0)}));const i=Object.keys(this._state).filter((e=>t[e]!==this._state[e]||!(e in t)));i.forEach((e=>{this._notify(e)})),i.length>0&&this.dispatchEvent("batch-completed",{changedProperties:i,oldState:t,newState:{...this._state}})}emit(e,t,i){return this.dispatchEvent(e,t,i)}toString(){return this._isPrimitive?String(this._value):"[object VnlState]"}valueOf(){return this._isPrimitive?this._value:NaN}}}));
